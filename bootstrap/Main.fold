
open Pure

open Fold
open Fold.Lex
open Fold.Syntax


module Evaluator
  def eval env expr = env, expr
end


def core_env =
  Env.empty

def main () =
  let lexer = Lexer.from_channel stdin,
      parse = Pratt.parse lexer

  let loop env =
    print ~terminator:" " "->";

    match parse env
    | Ok expr ->
      let (env', value) = Evaluator.eval env expr in
      Expr.print value;
      loop env'

    | Error msg ->
      print (" * " ^ msg);
      loop env
    end
  in
    loop core_env

