(;
  !(do {; a (f a b) (f a b c d e) 42 ()})
  !(val !(= x None))
  !(val !(= x (Some 1)))
  !(val !(= x (Some [, 1 2 3])))
  !(val !(= x (Two 1 2)))
  !(val !(= x (|> (Two 1 2) f)))
  !(val !(= x !(# A)))
  !(val !(= x (!(# A) !(# B))))
  !(val !(= x (!(# A) 42)))
  !(val !(= x (!(# A) ((+ 2 a)))))
  !(val !(= x (!(# A) a 42)))
  !(val !(= x (!(# A) (, b 43))))
  !(val !(= x (|> !(# A) f)))
  !(val !(= x (f !(# A) !(# B))))
  !(val !(= x (<| (f !(# A) !(# B)) !(# C))))
  !(do
     {;
       !(ident M x)
       !(field !(ident M x1) x2)
       !(ident M1 M2 x)
       !(field !(ident M1 M2 x1) x2)
       !(ident M1 M2 M3 x)
       !(field !(ident M1 M2 M3 x1) x2 x3)
       !(ident M C)
       !(ident M1 M2 C)
       !(ident M1 M2 M3 C)
       !(field r fld)
       !(field ((foo 42)) fld)
       !(field (!(ident M1 M2 r)) fld)
       !(field !(ident M1 M2 r) fld)
       !(field !(ident M r) fld)
       !(field !(ident M x1) x2 x3 x4)
       !(field x1 !(ident M x2))
       !(field x1 !(ident M1 M2 x2))
       !(field !(field x1 x2) !(ident M1 x3))
       !(field (C) fld)
       !(field (!(ident M C)) fld)
       !(field (!(ident M1 M2 C)) fld)
       (!(ident M f) v)
       (!(ident M1 M2 f) v)
       (!(ident M1 M2 M3 f) v)
       (!(ident M C) v)
       (!(ident M1 M2 C) v)
       (!(ident M1 M2 M3 C) v)
       (f !(ident M v))
       (f !(ident M1 M2 v))
       (f !(ident M1 M2 M3 v))
       (f !(field r fld))
       (f !(field r !(ident M fld)))
       (f !(field r !(ident M1 M2 fld)))
       (f !(field !(ident M1 r) fld))
       (C !(ident M v))
       (C !(ident M1 M2 v))
       (C !(ident M1 M2 M3 v))
       (!(ident M f) !(ident M v))
       (!(ident M1 f) !(field r !(ident M2 fld)))
       (!(ident M1 M2 f) !(ident M3 M4 v))
       (!(ident M1 M2 f) !(field r !(ident M3 M4 M5 fld)))
       (!(field !(ident M r) fld) v)
       !(ident M M M M M)
       !(field x x x x x)
       !(field !(field !(field x1 x2) !(ident M1 M2 x4)) !(ident M3 x5))
       !(field
          !(field !(field !(ident M1 M2 x1) x2) !(ident M3 M4 x4))
          !(ident M5 x6))
       !(field !(field !(ident M1 x1) x2) x3)
       !(field !(field !(ident M1 x1) x2 x3) x4)
       !(field
          !(field !(field !(field !(ident M1 x1) x2) x3) x4)
          !(ident M2 M3 x5))
       !(field !(field !(field x1 x2) x3) x4)
       (!(ident M1 M2 f) a !(ident M3 b) ((g !(ident M4 c) d e)))
       (f
         a
         ((!(ident M3 g) 2))
         ((f2 !(ident M4 M5 x)))
         ((h !(ident M6 c) d e)))
       (f !(ident M a) b)})
  !(val !(= val_1 1))
  !(val (, !(= val_2 1) !(= x 2)))
  !(val (, !(= val_3 1) !(= a 2) !(= b c)))
  !(rec !(= val_4 1))
  !(rec (, !(= val_4 1) !(= a 1)))
  !(val !(= a (/ ((- (+ 42 10) 2)) 2)))
  !(val !(= () ()))
  !(val !(= () a))
  !(val !(= l01 [[]]))
  !(val !(= l02 [[[]]]))
  !(val !(= l03 [, [1] [2] [] [, 3 4] [5]]))
  !(val !(= l04 []))
  !(val !(= l05 [1]))
  !(val !(= l06 [, 1 2]))
  !(val !(= l07 [, 1 2 3]))
  !(val !(= l08 [!(& 0 xs)]))
  !(val !(= l09 [!(& (, 1 2) xs)]))
  !(val !(= l10 [!(& 1 [2])]))
  !(val !(= l11 [!(& 1 [!(& 2 [, 3 4])])]))
  !(val !(= l12 [!(& (, 1 2) [!(& (, 3 4) [, 5 6])])]))
  ()
  (print_newline ())
  (print_endline ((string_of_int ((+ a b)))))
  !(val !(= let_01 {; !(let !(= a 1)) (+ a 1)}))
  !(val !(= let_02 {; !(let !(= a 1)) !(let !(= b (+ a 1))) (Ok b)}))
  !(val !(= let_03 {; !(let (, !(= a 1) !(= b 2))) (Ok ((+ a b)))}))
  !(val !(= let_04 {; !(rec !(= xs [!(& 1 xs)])) (Ok xs)}))
  !(val
     !(= let_05 {; !(rec (, !(= a (- 2 b)) !(= b (+ a 1)))) (Ok ((+ a b)))}))
  !(val
     !(=
        let_06
        {;
          !(let !(= x 42))
          !(rec (, !(= a (- 2 b)) !(= b (+ a 1))))
          (Ok ((+ a b)))}))
  !(val !(= let_07 {!(let !(= a 1))}))
  !(val !(= let_08 {!(let (, !(= a 1) !(= b 2)))}))
  !(val !(= let_09 {; !(let !(= a 1)) !(let !(= b 2))}))
  {a}
  {; a}
  {; a b}
  {; a b}
  {; a b c}
  {; a b c}
  {; (f ()) !(let !(= a 1)) a}
  !(val !(= [] x))
  !(val !(= [1] x))
  !(val !(= [, 1 2] x))
  !(val !(= [!(& (, 1 2) xs)] x))
  !(val !(= [!(& (, [] [, 1 2]) xs)] x))
  !(val !(= !(: 1 int) x))
  !(val !(= !(_|_ A B) x))
  !(val !(= r01 {, !(= a "A") !(= b 1) !(= c 2)}))
  !(val !(= r02 {!(~ a)}))
  !(val !(= r03 {!(= a 1)}))
  !(val !(= r04 {, !(~ a) !(= b 1)}))
  !(val !(= r05 {, !(= a 1) !(~ b)}))
  !(val !(= r06 {, !(~ a) !(~ b) !(~ c)}))
  !(val
     !(=
        r07
        {,
          !(= a 1)
          !(= f !(-> !(fn x) (+ x 1)))
          !(= g !(-> !(fn x y) (- x y)))}))
  !(val !(= r08 {!(& r (, !(= a 23) !(= b 1)))}))
  !(val !(= r09 {!(& r (, !(= a 23) !(~ b)))}))
  !(val !(= r10 {!(& r (, !(~ a) !(= b 1)))}))
  !(val !(= r11 {!(& r !(~ a))}))
  !(val !(= r12 {!(& r (, !(~ a) !(~ b)))}))
  !(val !(= r13 {!(& r !(= a 1))}))
  !(val !(= f !(-> !(fn a) (+ a 1))))
  !(val !(= f !(-> !(fn ()) ())))
  !(val !(= f !(-> !(fn a b) (+ a b))))
  !(val !(= f !(-> !(fn (!(: a int))) (+ a 1))))
  !(val !(= f !(-> !(fn !(~ a)) a)))
  !(val !(= f !(-> !(fn !(~ (a))) a)))
  !(val !(= f !(-> !(fn !(~ (!(: a int)))) a)))
  !(val !(= f !(-> !(fn !(~ (!(as a b)))) b)))
  !(val !(= f !(-> !(fn !(~ (!(= a 1))) b) (+ a b))))
  !(val !(= f !(-> !(fn !(~ (!(= !(as a b) 1))) c) (+ b c))))
  !(val !(= f !(-> !(fn !(~ (!(= !(as a ((Some b))) x))) c) (+ b c))))
  !(val
     !(=
        f
        !(->
           !(fn !(~ (!(= !(as a (!(: (Some b) (option int)))) x))) c)
           (+ b c))))
  !(val !(= f !(-> !(fn !(~? a)) a)))
  !(val !(= f !(-> !(fn !(~ (!(as !(? a) b)))) b)))
  !(do
     {;
       (f !(~ a))
       (f !(~ (a)))
       (f !(~ (!(= a 1))))
       (f !(~ (!(: a int))))
       (f !(~ (!(= !(: a int) 1))))
       (f !(~? a))
       (f !(~ (!(? a))))
       (f !(~ (!(= !(? a) b))))
       (f !(~ (!(= !(: !(? a) (int option)) b))))})
  !(type !(= f !(-> a b)))
  !(type !(= f !(-> a !(-> b !(-> c d)))))
  !(type !(= f !(-> !(~ (!(: a t))) b)))
  !(type !(= f !(-> x !(-> !(~ (!(: a t))) b))))
  !(type !(= f !(-> !(~ (!(: a t))) !(-> b c))))
  !(type !(= f !(-> !(~ (!(: !(? a) t))) b)))
  !(type !(= f !(-> !(~ (!(: a t))) !(-> !(~ (!(: !(? b) t))) c))))
  !(sig
     !(=
        S
        {;
          !(val !(: v !(-> a b)))
          !(val !(: v !(-> a !(-> b !(-> c d)))))
          !(val !(: v !(-> !(~ (!(: a t))) b)))
          !(val !(: v !(-> x !(-> !(~ (!(: a t))) b))))
          !(val !(: v !(-> !(~ (!(: a t))) !(-> b c))))
          !(val !(: v !(-> !(~ (!(: !(? a) t))) b)))
          !(val !(: v !(-> !(~ (!(: a t))) !(-> !(~ (!(: !(? b) t))) c))))}))
  !(val !(= f !(fn {!(-> a (+ a 1))})))
  !(val !(= f (+ !(fn {!(-> a (+ a 1))}) 1)))
  !(val !(= f !(fn {, !(-> a 1) !(-> b 2)})))
  !(val !(= f !(fn {, !(-> a 1) !(-> (!(_|_ A B)) 2)})))
  !(val !(= x (|> xs (!(ident List map) (!(fn {!(-> x (+ x 1))}))))))
  !(val !(= x !(if a b c)))
  !(val !(= x !(if a {; x b} {c})))
  !(val !(= x !(if a {; x b} {; y c})))
  !(val !(= x {; !(if a {b} {c}) x}))
  !(val !(= x (+ !(if a {b} {c}) 1)))
  !(val !(= x (+ !(if a b c) 1)))
  !(val !(= x !(if a {b})))
  !(val !(= x !(if a {; (print_newline ()) b})))
  !(val !(= x !(if a {(+ b 1)})))
  !(val !(= x (+ !(if a {b}) 1)))
  !(val !(= x (+ !(if a b) 1)))
  !(val !(= x !(match a {, !(-> 1 0) !(-> 2 b)})))
  !(val !(= x !(match a {!(-> 1 0)})))
  !(val !(= x !(match ((+ a b)) {, !(-> 1 0) !(-> 2 b)})))
  !(val !(= x (+ !(match a {, !(-> 1 b) !(-> 2 c)}) 100)))
  !(val !(= x !(match a {, !(-> 1 {; (print_endline "1") a}) !(-> 2 b)})))
  !(val !(= x !(match a {, !(-> 1 0) !(-> !(_if_ x (> x 0)) b) !(-> _ 1)})))
  !(val !(= m (|> a !(fn {, !(-> 1 0) !(-> 2 b)}))))
  !(val !(= x !(try ((f ())) {!(-> a (prerr_endline msg))})))
  !(val !(= x !(try ((f ())) {, !(-> a (prerr_endline msg)) !(-> b bar)})))
  !(mod !(= M1 X))
  !(mod !(= M1 !(ident M2 M3 X)))
  !(mod !(= M2 {}))
  !(mod !(= M3 {; !(val !(= a 1)) !(val !(= b 2))}))
  !(mod !(= !(: M4 {}) {}))
  !(mod !(= !(: M5 {!(val !(: x int))}) {!(val !(= x 42))}))
  !(mod
     !(=
        !(: M6 {; !(val !(: x int)) !(val !(: y int))})
        {; !(val !(= x 42)) !(val !(= y 2))}))
  !(sig !(= S1 {; !(val !(: a int)) !(val !(: b bool))}))
  !(open M)
  !(val !(= x {; !(let !(= a 1)) !(open M) a}))
  !(val !(= x {; !(open M) !(let !(= a 1)) a}))
  !(do {; !(while e1 e2) !(while ((> x 1)) {; (print "hello") (f ())})})
  !(do
     {;
       !(for (!(= i !(to e1 e2))) e3)
       !(for (!(= i !(downto e1 e2))) e3)
       !(for (!(= i !(to e1 e2))) {; (print "hello") (f ())})})
  !(do
     {;
       !(: x t)
       (+ 2 (* (!(: x int)) 2))
       (f (!(: x int)) y)
       (f (!(: xs (list int))))})
  !(val !(= !(: v_constraint_1 int) 42))
  !(val
     !(= !(: v_constraint_2 (list (, string int))) [, (, "a" 2) (, "b" 3)]))
  !(type t)
  !(type nonrec t)
  !(type !(= t int))
  !(type !(= t (list int)))
  !(type !(= t (list ((list int)))))
  !(type !(= (nonrec t) int))
  !(type !(= t (, int bool)))
  !(type !(= t A))
  !(type !(= t (A int)))
  !(type !(= t (A int string)))
  !(type !(= t {A}))
  !(type !(= t {(A int)}))
  !(type !(= t {(A int string)}))
  !(type !(= t {(A (, int string))}))
  !(type !(= t {!(_|_ A B C)}))
  !(type !(= t {!(_|_ A (B int bool))}))
  !(type !(= t (== u A)))
  !(type !(= t (== u {!(_|_ A (B int))})))
  !(type !(= t {, !(: a int) !(: b (list bool))}))
  !(type !(= t (== u {, !(: a int) !(: b (list bool))})))
  !(type !(= t {, !(: a (mutable int)) !(: b (mutable ((list bool))))}))
  !(type !(= t ..))
  !(val !(= x !(mc1 (2))))
  !(val !(= x (+ !(mc2 (2)) 1)))
  !(val !(= x !(mc3 {(< div > "hello" </ div >)})))
  !(val
     !(=
        x
        !(if {, !(-> (> a 1) "yes") !(-> (== a 0) "maybe") !(-> else "no")}))))
